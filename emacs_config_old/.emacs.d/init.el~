
;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(require 'package)
(package-initialize)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(LaTeX-mode-hook
   '(preview-mode-setup
     (lambda nil
       (local-set-key
	[tab]
	'TeX-complete-symbol))))
 '(TeX-bar-LaTeX-buttons
   '(dired latex next-error view bibtex spell latex-symbols-experimental nil))
 '(TeX-brace-indent-level 3)
 '(TeX-newline-function 'newline-and-indent)
 '(ac-auto-show-menu 0.4)
 '(auctex-latexmk-inherit-TeX-PDF-mode t)
 '(company-backends
   '(company-bbdb company-eclim company-semantic company-clang company-xcode company-cmake company-capf company-files
		  (company-dabbrev-code company-gtags company-etags company-keywords)
		  company-oddmuse company-dabbrev company-reftex-citations company-reftex-labels))
 '(company-reftex-annotate-citations "t")
 '(company-tooltip-align-annotations t)
 '(custom-safe-themes
   '("f2c35f8562f6a1e5b3f4c543d5ff8f24100fae1da29aeb1864bbc17758f52b70" default))
 '(delete-selection-mode t)
 '(dired-guess-shell-alist-user
   '(("(\"\\\\.pdf\\\\'\" \"okular evince\")")
     ("(\"\\\\.eps\\\\'\" \"evince\")")
     ("(\"\\\\.jpe?g\\\\'\" \"eog\")")
     ("(\"\\\\.\\\\(?:mp4\\\\|mkv\\\\|avi\\\\|flv\\\\)\\\\'\" \"vlc\")")))
 '(dired-listing-switches "-al")
 '(elpy-autodoc-delay 4)
 '(face-font-family-alternatives
   '(("Fira Code Rgular" "Monospace" "courier" "fixed")
     ("Monospace Serif" "Courier 10 Pitch" "Consolas" "Courier Std" "FreeMono" "Nimbus Mono L" "courier" "fixed")
     ("courier" "CMU Typewriter Text" "fixed")
     ("Sans Serif" "helv" "helvetica" "arial" "fixed")
     ("helv" "helvetica" "arial" "fixed")))
 '(font-use-system-font t)
 '(package-selected-packages
   '(browse-kill-ring elpy python-mode expand-region bm auctex-latexmk 2048-game outshine swap-regions transpose-frame markdown-preview-mode image-dired+ matlab-mode racket-mode lsp-ivy swiper ivy scribble-mode company-reftex lsp-treemacs lsp-ui lsp-latex lsp-jedi lsp-mode company-math tabbar company sublimity sudo-edit auctex dumb-jump reverse-im\.el reverse-im hy-mode rainbow-identifiers rainbow-delimiters anti-zenburn-theme zenburn-theme))
 '(racket-program "C:\\Program Files\\Racket\\Racket.exe")
 '(racket-xp-after-change-refresh-delay 10)
 '(sunrise-avfs-root "~/.avfs")
 '(sunrise-listing-switches "-a")
 '(sunrise-quit-hook
   '(sunrise-buttons-sunrise-quit-function sunrise-quit-function sunrise-save-directories))
 '(sunrise-show-file-attributes nil)
 '(sunrise-show-hidden-files t)
 '(sunrise-windows-default-ratio 70)
 '(yas-global-mode t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :extend nil :stipple nil :background "#3F3F3F" :foreground "#DCDCCC" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 102 :width normal :foundry "outline" :family "Consolas"))))
 '(hl-line ((t (:background "#383838"))))
 '(rainbow-delimiters-base-face ((t (:inherit nil :weight extra-bold :width expanded))))
 '(sunrise-active-path-face ((t (:background "deep sky blue" :foreground "azure2" :weight bold :height 120))))
 '(sunrise-tabs-active-face ((t (:inherit variable-pitch :background "brown" :weight bold :height 0.9))))
 '(sunrise-tabs-inactive-face ((t (:inherit variable-pitch :background "gray41" :height 0.9)))))

;;;;;;;;;;;;;;;;;;;;; MY ;;;;;;;;;;;;;;;;;;;;;;;;;;;

(add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/packages/") t)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)

(add-to-list 'load-path "~/.emacs.d/local/")
;; (package-initialize)


(eval-when-compile
 (add-to-list 'load-path "~/.emacs.d/local/use-package")
 (require 'use-package))


(add-to-list 'default-frame-alist '(fullscreen . maximized))
(setq delete-by-moving-to-trash t)

(set-fontset-font "fontset-default" 'cyrillic "Consolas")

(require 'hl-line)
(global-hl-line-mode 1)
;; (global-linum-mode 1)
(global-display-line-numbers-mode 1)


(global-set-key (kbd "C-x <up>") 'windmove-up)
(global-set-key (kbd "C-x <down>") 'windmove-down)
(global-set-key (kbd "C-x <left>") 'windmove-left)
(global-set-key (kbd "C-x <right>") 'windmove-right)

(global-set-key (kbd "C-c r") 'replace-regexp)

(global-set-key (kbd "C-=") 'er/expand-region)



(desktop-save-mode t)

(use-package dired+)

(add-to-list 'load-path "~/.emacs.d/local/sunrise-commander")
(require 'sunrise)
(require 'sunrise-buttons)
(require 'sunrise-modeline)
(require 'sunrise-mirror)
(require 'sunrise-tree)
(add-to-list 'auto-mode-alist '("\\.srvm\\'" . sr-virtual-mode))

(require 'sunrise-tabs)
(require 'sunrise-checkpoint)



;;(global-set-key [(control ?~) ] 'sunrise-cd)





(add-to-list 'load-path "~/.emacs.d/local/reverse-im.el")

(use-package reverse-im
  ;;:ensure reverse-im
  :custom
  (reverse-im-input-methods '("russian-computer"))
  :config
  (reverse-im-mode t))





(require 'zenburn-theme)
;; use variable-pitch fonts for some headings and titles
(setq zenburn-use-variable-pitch t)
;; scale headings in org-mode
(setq zenburn-scale-org-headlines t)
;; scale headings in outline-mode
(setq zenburn-scale-outline-headlines t)

(load-theme 'zenburn)


(require 'rainbow-delimiters)
(define-globalized-minor-mode global-rainbow-delimiters-mode rainbow-delimiters-mode
                              (lambda () (rainbow-delimiters-mode 1)))
(global-rainbow-delimiters-mode 1)

(use-package company-reftex)

;; (use-package reftex)
;; (add-hook 'LaTeX-mode-hook 'turn-on-reftex)

(eval-after-load 'tex-mode
  '(progn
     (define-key LaTeX-mode-map (kbd "<return>") 'TeX-newline)
     (define-key LaTeX-mode-map (kbd "<C-return>") 'newline)))


(use-package ivy
  :config
  (progn (ivy-mode 1)
	 (setq ivy-use-selectable-prompt t)))
(use-package swiper
  :config
  (setq ivy-use-virtual-buffers t)
  (setq enable-recursive-minibuffers t)
  :bind
  ("C-s" . swiper))

(use-package lsp-mode
  :hook
  ;; (LaTeX-mode . lsp)
  ((python-mode . lsp))
  :commands lsp)

(setenv "PATH" (concat (getenv "PATH") ";C:\\Python39\\Scripts\\"))

(use-package elpy
  :ensure t
  :bind ("C-<tab>" . elpy-company-backend)
  :init
  (elpy-enable))


;; optionally
(use-package lsp-ui
  :commands lsp-ui-mode)
;; if you are helm user
;; (use-package helm-lsp :commands helm-lsp-workspace-symbol)
;; if you are ivy user
(use-package lsp-ivy :commands lsp-ivy-workspace-symbol)
(use-package lsp-treemacs :commands lsp-treemacs-errors-list)

;; (require 'company-lsp)

;;(lsp-auto-configure t)

;; (push 'company-lsp company-backends)

;; (use-package flycheck
;;   :ensure t
;;   :init (global-flycheck-mode))



;; (add-to-list company-backends 'company-reftex-citations)
;; (add-to-list company-backends 'company-reftex-labels)

;; (use-package 'yas-snippet )

;;(add-to-list 'company-lsp-filter-candidates '(texlab . nil))


;; optionally if you want to use debugger
;(use-package dap-mode)
;; (use-package dap-LANGUAGE) to load the dap adapter for your language

;; optional if you want which-key integration
;; (use-package which-key
;;     :config
;;     (which-key-mode))

;; (setq lsp-enable-symbol-highlighting nil)
;; (setq lsp-lens-enable nil)
;; (setq lsp-headerline-breadcrumb-enable nil)


;; (setenv "PATH" (concat (getenv "PATH") ":/usr/local/texlive/2020/bin/x86_64-linux"))
;; (add-to-list 'exec-path "/usr/local/texlive/2020/bin/x86_64-linux/")


(setq TeX-auto-save t)
(setq TeX-parse-self t)

(auctex-latexmk-setup)

(load "c:/Users/heinwol/AppData/Roaming/.emacs.d/elpa/auctex-12.3.1/preview.el" nil t t)

(require 'org-table)


;;(add-hook ’LaTeX-mode-hook ’turn-on-reftex)
;;(setq reftex-plug-into-auctex t)



(require 'racket-mode)
;; (add-to-list 'load-path "home/heinwol/.emacs.d/local/lsp-racket.el/")
;; (require 'lsp-racket)
;; (add-hook 'racket-mode-hook #'lsp-racket-enable)
(add-hook 'racket-mode-hook 'racket-xp-mode)



(require 'openwith)
(openwith-mode t)

(require 'dumb-jump)

(add-hook 'xref-backend-functions #'dumb-jump-xref-activate)



(require 'sudo-edit)


(require 'popup)
(require 'pos-tip)
(use-package popup-kill-ring
  :config
  (setq popup-kill-ring-interactive-insert nil)
  :bind
  ("C-c C-Y" . popup-kill-ring)
  ;("C-y" . yank)
  )



;; (require 'sublimity)
;; (require 'sublimity-scroll)
;; ;; (sublimity-global-mode)
;; (sublimity-mode 1)

(setq scroll-step           1
      scroll-conservatively 10000)
(global-visual-line-mode t)
(electric-pair-mode 1)
(show-paren-mode 1)

(set-default 'preview-scale-function 1.3)


(add-hook 'after-init-hook 'global-company-mode)


(global-set-key (kbd "C-M-y") '(lambda () (interactive)
				 (insert "λ")))


(add-to-list 'load-path "~/.emacs.d/local/my/")
(require 'my-main)
(require 'my-scrtex)


;; (use-package matlab-mode
;; ;; :load-path "~/.emacs.d/local/matlab-mode"
;; ;;  :config (matlab-mode-common-setup)
;;   )



;; (add-hook 'kill-emacs-hook (lambda () (sunrise-save-directories))

(put 'erase-buffer 'disabled nil)
